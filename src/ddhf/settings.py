"""
Django settings for ddhf project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

import dotenv

dotenv.load_dotenv(dotenv.find_dotenv())

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", None) or 'django-insecure-+88)f_s&u**1*p4$pil_#0d1^%zna889kd*)6)=vv_yz8sf75^'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True if os.getenv("DJANGO_DEBUG", False) else False

ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", '.localhost 127.0.0.1 [::1]').split()

# CSRF_COOKIE_SECURE = True if not DEBUG else False
# SESSION_COOKIE_SECURE = True if not DEBUG else False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'ddhf_data',
    # 'itemdb',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ddhf.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ddhf.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
DB_CONN_MAX_AGE = os.getenv("DB_CONN_MAX_AGE", 60)
DATABASES = {
    '__default': {
        'CONN_MAX_AGE': DB_CONN_MAX_AGE,
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    "default": {
        "CONN_MAX_AGE": DB_CONN_MAX_AGE,
        "ENGINE": "django.db.backends.mysql",
        "DATABASE_NAME": os.getenv("DB_MSMYSQL_DBNAME", "db1"),
        "USER": os.getenv("DB_MSMYSQL_USER"),
        "PASSWORD": os.getenv("DB_MSMYSQL_PASSWORD"),
        "NAME": os.getenv("DB_MSMYSQL_NAME"),
        "HOST": os.getenv("DB_MSMYSQL_HOST"),
        "PORT": os.getenv("DB_MSMYSQL_PORT"),
    }
}

# This is so fucked up, but the original author hardcoded a dependency to
# a MySQL database:
DATABASE_NAME = os.getenv("DB_MSMYSQL_DBNAME", "db1")
DATABASE_USER = os.getenv("DB_MSMYSQL_USER")
DATABASE_PASSWORD = os.getenv("DB_MSMYSQL_PASSWORD")
DATABASE_HOST = os.getenv("DB_MSMYSQL_HOST")

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# static, media, admin mappes af varnish

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'pictures'
# MEDIA_URL = 'http://www.datamuseum.dk/static/'

# MEDIA_ROOT = '/home/bauer/DDHF/pictures/'
# MEDIA_URL = 'http://www.datamuseum.dk/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}
